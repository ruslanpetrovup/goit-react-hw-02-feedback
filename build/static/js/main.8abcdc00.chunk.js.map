{"version":3,"sources":["Section/Section.js","Statistics/Statistics.js","FeedbackOptions/FeedbackOptions.js","Feedback/Feedback.js","index.js","FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","onGood","onNeutral","onBad","className","style","button","type","onClick","Feedback","state","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","this","React","Component","defaultProps","positive","ReactDOM","render","document","getElementById","module","exports"],"mappings":"sNAaeA,EATC,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACrB,OAAQ,qCACJ,6BAAKD,IACJC,M,4BCgBMC,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACzC,OAAgB,IAATJ,GAAsB,IAARE,GAAyB,IAAZD,EAAgB,qCAAE,6CAAoB,qDACpE,qCACI,6CACA,sCAASD,KACT,yCAAYC,KACZ,qCAAQC,KACR,wCAAWC,KACX,oDAAgC,IAATH,GAAsB,IAARE,EAAY,EAAIE,EAArD,W,gBCCDC,EATS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MAC1C,OACI,qCACA,wBAAQC,UAAWC,IAAMC,OAAQC,KAAK,SAASC,QAASP,EAAxD,kBACA,wBAAQG,UAAWC,IAAMC,OAAQC,KAAK,SAASC,QAASN,EAAxD,qBACA,wBAAQE,UAAWC,IAAMC,OAAQC,KAAK,SAASC,QAASL,EAAxD,qBCJFM,E,4MAKFC,MAAQ,CACJf,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAETI,OAAS,WACL,EAAKU,UAAS,SAAAC,GACV,MAAO,CACHjB,KAAMiB,EAAUjB,KAAO,O,EAInCO,UAAY,WACR,EAAKS,UAAS,SAAAC,GACV,MAAO,CACHhB,QAASgB,EAAUhB,QAAU,O,EAIzCO,MAAQ,WACJ,EAAKQ,UAAS,SAAAC,GACV,MAAO,CACHf,IAAKe,EAAUf,IAAM,O,EAIjCgB,mBAAqB,WAEjB,OADc,EAAKH,MAAMf,KAAO,EAAKe,MAAMd,QAAU,EAAKc,MAAMb,K,EAGpEiB,gCAAkC,WAE9B,OADkB,EAAKJ,MAAMf,MAAS,EAAKe,MAAMb,IAAM,EAAKa,MAAMf,MAAS,K,4CAG/E,WACI,OACI,gCACI,cAAC,EAAD,CAAiBM,OAAQc,KAAKd,OAAQC,UAAWa,KAAKb,UAAWC,MAAOY,KAAKZ,QAC7E,cAAC,EAAD,CAAYR,KAAMoB,KAAKL,MAAMf,KAC7BC,QAASmB,KAAKL,MAAMd,QACpBC,IAAKkB,KAAKL,MAAMb,IAChBC,MAAOiB,KAAKF,qBACZd,mBAAoBgB,KAAKD,2C,GA/ClBE,IAAMC,WAAvBR,EACKS,aAAe,CAClBC,SAAU,EACVrB,MAAO,GAiDAW,Q,MCjDfW,IAASC,OAAO,cAAC,EAAD,CAAS7B,MAAM,uCAAf,SAAwB,cAAC,EAAD,MAAuB8B,SAASC,eAAe,U,kBCNvFC,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.8abcdc00.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Section = ({title, children}) => {\r\n    return (<>\r\n        <h1>{title}</h1>\r\n        {children}\r\n    </>)\r\n}\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}\r\nexport default Section","import React from 'react';\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n        return good === 0 && bad === 0 && neutral === 0 ? <><h2>Statistical</h2><p>No feedback given</p></>:(\r\n            <>\r\n                <h2>Statistical</h2>\r\n                <p>Good:{good}</p>\r\n                <p>Neutral:{neutral}</p>\r\n                <p>Bad:{bad}</p>\r\n                <p>Total: {total}</p>\r\n                <p>Positive feedback: {good === 0 && bad === 0 ? 0 : positivePercentage}%</p>\r\n            </>\r\n        )\r\n}\r\n    \r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n}\r\nexport default Statistics","import React from 'react';\r\nimport style from './FeedbackOptions.module.css'\r\n\r\nconst FeedbackOptions = ({ onGood, onNeutral, onBad }) => {\r\n    return (\r\n        <>\r\n        <button className={style.button} type=\"button\" onClick={onGood}>Good</button>\r\n        <button className={style.button} type=\"button\" onClick={onNeutral}>Neutral</button>\r\n        <button className={style.button} type=\"button\" onClick={onBad}>Bad</button>\r\n        </>\r\n    )\r\n}\r\nexport default FeedbackOptions","import React from 'react';\r\nimport Statistics from '../Statistics/Statistics';\r\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\r\n\r\nclass Feedback extends React.Component {\r\n    static defaultProps = {\r\n        positive: 0,\r\n        total: 0\r\n    }\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0\r\n    };\r\n    onGood = () => {\r\n        this.setState(prevState => {\r\n            return {\r\n                good: prevState.good + 1\r\n            }\r\n        })\r\n    }\r\n    onNeutral = () => {\r\n        this.setState(prevState => {\r\n            return {\r\n                neutral: prevState.neutral + 1\r\n            }\r\n        })\r\n    }\r\n    onBad = () => {\r\n        this.setState(prevState => {\r\n            return {\r\n                bad: prevState.bad + 1\r\n            }\r\n        })\r\n    }\r\n    countTotalFeedback = () => {\r\n        const total = this.state.good + this.state.neutral + this.state.bad;\r\n        return total\r\n    }\r\n    countPositiveFeedbackPercentage = () => {\r\n        const positive = (this.state.good) / (this.state.bad + this.state.good ) * 100\r\n        return positive\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <FeedbackOptions onGood={this.onGood} onNeutral={this.onNeutral} onBad={this.onBad}/>\r\n                <Statistics good={this.state.good}\r\n                neutral={this.state.neutral}\r\n                bad={this.state.bad}\r\n                total={this.countTotalFeedback()}\r\n                positivePercentage={this.countPositiveFeedbackPercentage()}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Feedback","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Section from './Section/Section';\r\nimport Feedback from './Feedback/Feedback'\r\nimport './style.css'\r\n\r\n\r\nReactDOM.render(<Section title=\"Отзывы\"><Feedback/></Section>, document.getElementById('root'))\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1ryBX\"};"],"sourceRoot":""}